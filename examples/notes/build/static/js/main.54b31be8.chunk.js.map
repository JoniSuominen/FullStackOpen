{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","content","onClick","Notification","message","notes","getAll","request","axios","get","nonExisting","id","date","then","response","data","concat","create","newObject","post","update","put","console","log","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addNote","event","preventDefault","noteObject","state","newNote","Date","toISOString","Math","random","noteService","setState","login","username","password","handleNoteChange","target","value","handlePasswordChange","handleUserNameChange","toggleVisible","showAll","toggleImportanceOf","find","n","changedNote","objectSpread","filter","catch","error","setTimeout","user","_this2","_this3","notesToShow","components_Notification","onSubmit","type","onChange","map","components_Note","key","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.54b31be8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n    const label = note.important ? 'make not important' : 'make important'\r\n    return (\r\n        <li className=\"note\">{note.content} <button onClick={toggleImportance}>{label} </button></li>\r\n    )\r\n}\r\n\r\nexport default Note","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n    if (message === null) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    const nonExisting = {\r\n        id: 1000,\r\n        content: 'T채t채 muistiinpanoa ei ole palvelimella',\r\n        date: '2017-12-10T17:30:31.098Z',\r\n        important: true\r\n    }\r\n    return request.then(response => response.data.concat(nonExisting))\r\n\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseUrl, newObject);\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default{getAll, create, update}","import React from 'react'\r\nimport Note from './components/Note'\r\nimport './index.css'\r\nimport Notification from './components/Notification'\r\nimport noteService from './services/notes'\r\n\r\nconsole.log('qdjiwqdjiwqodjqwo')\r\n\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {  \r\n            notes: [],\r\n            newNote: 'uusi muistiinpano...',\r\n            showAll: false,\r\n            error: null,\r\n            username: '',\r\n            password: '',\r\n            user: null\r\n        }\r\n        console.log('constructor')\r\n    }\r\n    componentDidMount() {\r\n        console.log('did mount')\r\n        noteService\r\n            .getAll()\r\n            .then(response => {\r\n                console.log('promise fullfilled')\r\n                this.setState({notes: response})\r\n            })\r\n    }\r\n\r\n\r\n    addNote = (event) => {\r\n        event.preventDefault()\r\n        const noteObject = {\r\n            content: this.state.newNote,\r\n            date: new Date().toISOString(),\r\n            important: Math.random() > 0.5,\r\n\r\n        }\r\n        \r\n        noteService\r\n            .create(noteObject)\r\n            .then(newNote => {\r\n                this.setState({\r\n                    notes:  this.state.notes.concat(newNote),\r\n                    newNote: ''\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    login = (event) => {\r\n      event.preventDefault()\r\n      console.log('logging in with', this.state.username, this.state.password)\r\n    }\r\n\r\n    handleNoteChange = (event) => {\r\n      console.log(event.target.value)\r\n      this.setState({newNote: event.target.value})\r\n    }\r\n\r\n    handlePasswordChange = (event) => {\r\n      this.setState({password: event.target.value})\r\n    }\r\n\r\n    handleUserNameChange = (event) => {\r\n      this.setState({username: event.target.value})\r\n    }\r\n  \r\n    toggleVisible = () => {\r\n      this.setState({showAll: !this.state.showAll})\r\n    }\r\n\r\n    toggleImportanceOf = (id) => {\r\n        return () => {\r\n            const note = this.state.notes.find(n => n.id === id)\r\n            const changedNote = {...note, important: !note.important}\r\n            console.log(`importance of  ${id} needs to be toggled`)\r\n\r\n            noteService\r\n                .update(id, changedNote)\r\n                .then(changedNote => {\r\n                    const notes = this.state.notes.filter(n => n.id !== id)\r\n                    this.setState({\r\n                        notes: notes.concat(changedNote)\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    this.setState({\r\n                        error: `muistiinpano '${note.content}' on jo valitettavasti poistettu palvelimelta`,\r\n                        notes: this.state.notes.filter(n => n.id !== id)\r\n                    })\r\n                    setTimeout(() => {\r\n                        this.setState({\r\n                            error: null\r\n                        })\r\n                    }, 5000)\r\n                })\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log('render')\r\n        const notesToShow = \r\n            this.state.showAll ?\r\n                this.state.notes :\r\n                this.state.notes.filter(note => note.important)\r\n\r\n        const label = this.state.showAll ? 'vain t채rke채t' : 'kaikki'\r\n        return (\r\n            <div>\r\n                <h1>Muistiinpanot</h1>\r\n                <Notification message={this.state.error}/>\r\n\r\n                <h2>Kirjaudu</h2>\r\n\r\n                <form onSubmit={this.login}>\r\n                  <div>\r\n                    k채ytt채j채tunnus\r\n                    <input\r\n                      type=\"text\"\r\n                      value={this.state.username}\r\n                      onChange={this.handleUserNameChange}\r\n                    />\r\n                  </div>\r\n                  <div>\r\n                    salasana\r\n                    <input\r\n                      type=\"password\"\r\n                      value={this.state.password}\r\n                      onChange={this.handlePasswordChange}\r\n                    />\r\n                  </div>\r\n\r\n                  <button type=\"submit\">kirjaudu</button>\r\n                </form>\r\n                <h2>Luo uusi muistiinpano</h2>\r\n                <form onSubmit={this.addNote}>\r\n                  <input\r\n                    value={this.state.newNote}\r\n                    onChange={this.handleNoteChange}\r\n                  />\r\n                  <button type=\"submit\">tallenna</button>\r\n                </form>\r\n\r\n                <h2>Muistiinpanot</h2>\r\n                <div>\r\n                    <button onClick ={this.toggleVisible}>\r\n                    n채yt채 {label}\r\n                    </button>\r\n                </div>\r\n                <ul>   \r\n                    {notesToShow.map(note =>\r\n                    <Note \r\n                    key={note.id} \r\n                    note={note}\r\n                    toggleImportance={this.toggleImportanceOf(note.id)}\r\n                    />)}\r\n                </ul>\r\n                <form onSubmit={this.addNote}>\r\n                    <input\r\n                    value={this.state.newNote}\r\n                    onChange={this.handleNoteChange}\r\n                    />\r\n                    <button type=\"submit\">tallenna</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\n\nReactDOM.render(\n    <App/>\n    , document.getElementById('root'));"],"sourceRoot":""}
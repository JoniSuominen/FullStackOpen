{"version":3,"sources":["components/Person.js","components/AddForm.js","components/Filter.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Person","props","react_default","a","createElement","name","numero","onClick","removePerson","AddForm","onSubmit","submit","value","onChange","handleName","number","handleNumber","type","Filter","_ref","handleFilterChange","filter","Notification","message","className","baseUrl","persons","getAll","axios","get","then","response","data","create","post","destroy","id","delete","concat","update","newObject","console","log","put","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleNameChange","event","setState","newName","target","handleNumberChange","newNumber","findName","person","state","toLowerCase","length","find","p","window","confirm","personServices","newPerson","lastOperation","operationType","setTimeout","catch","error","addName","preventDefault","nameObject","replaceNumber","prson","_this2","_this3","personsToShow","includes","components_Notification","components_Filter","components_AddForm","map","components_Person","key","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0dd02411.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = (props) => {\r\n    return (\r\n        <div>\r\n            {props.name} {props.numero}\r\n            <button onClick={props.removePerson}>poista</button>\r\n        </div>\r\n    )\r\n}\r\nexport default Person","import React from 'react'\r\n\r\n\r\nconst AddForm = (props) => {\r\n    return (\r\n        <div>\r\n            <h2>Lisää uusi</h2>\r\n        <form onSubmit={props.submit}>\r\n            nimi:\r\n            \r\n            <input\r\n            value = {props.name}\r\n            onChange = {props.handleName}\r\n            />\r\n\r\n            numero:\r\n            <input\r\n            value = {props.number}\r\n            onChange = {props.handleNumber}\r\n            />\r\n        <div>\r\n            <button type=\"submit\">Lisää</button>\r\n        </div>\r\n        </form>    \r\n        </div>      \r\n    )\r\n}\r\n\r\nexport default AddForm","import React from 'react'\r\n\r\nconst Filter = ({handleFilterChange, filter}) => {\r\n    return (\r\n        <div>\r\n            rajaa näytettäviä\r\n            <input\r\n            value={filter}\r\n            onChange={handleFilterChange}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Notification = ({message, type}) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n    return (\r\n        <div className={type}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    \r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst destroy = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`) \r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (Person) => {\r\n    const request = axios.post(baseUrl, Person);\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    console.log(id);\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\n\r\nexport default{getAll, create, destroy, update}","import React from 'react'\r\nimport Person from './components/Person'\r\nimport AddForm from './components/AddForm'\r\nimport Filter from './components/Filter'\r\nimport Notification from './components/Notification'\r\nimport './index.css'\r\nimport personServices from './services/persons'\r\n\r\n/*\r\n    The exercise assumes we can only have one person with a same name, thus name could have\r\n    probably been used as an id for components here, but I decided to give each person an Id.\r\n*/\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            persons: [\r\n\r\n            ],\r\n            newName: '',\r\n            newNumber: '',\r\n            filter : '',\r\n            lastOperation : null,\r\n            operationType: null\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        personServices\r\n            .getAll()\r\n            .then(response => {\r\n                this.setState({persons: response})\r\n            })\r\n    }\r\n\r\n    handleNameChange = (event) => {\r\n        this.setState({newName: event.target.value})\r\n    }\r\n\r\n    handleNumberChange = (event) => {\r\n        this.setState({newNumber: event.target.value})\r\n    }\r\n\r\n    handleFilterChange = (event) => {\r\n        this.setState({filter: event.target.value})\r\n    }\r\n\r\n    findName = (name) => {\r\n        const person = this.state.persons.filter(person => person.name.toLowerCase() === name.toLowerCase())\r\n        console.log(person.length)\r\n        return person.length > 0;\r\n    }\r\n\r\n    removePerson = (id) => {\r\n        return () => {\r\n            console.log(id)\r\n            const person = this.state.persons.find(p => p.id === id)\r\n            if (!window.confirm(`poistetaanko ${person.name} `)) {\r\n                return;\r\n            }\r\n\r\n            personServices \r\n                .destroy(person.id)\r\n                .then(newPerson => {\r\n\r\n                    this.setState({\r\n                        persons: this.state.persons.filter(p => p.id !== id),\r\n                        lastOperation: `${person.name} poistettiin`,\r\n                        operationType: 'removal'\r\n                    })\r\n                    setTimeout(() => {\r\n                        this.setState({\r\n                            lastOperation: null,\r\n                            operationType: null\r\n                        })\r\n                      }, 3000)\r\n\r\n                })\r\n                .catch(error => {\r\n\r\n                    this.setState({\r\n                        persons: this.state.persons.filter(p => p.name !== person.name),\r\n                        lastOperation: `${person.name} on jo poistettu!`,\r\n                        operationType: 'removal'\r\n                    })\r\n                    setTimeout(()=> {\r\n                        this.setState({\r\n                            lastOperation: null,\r\n                            operationType: null\r\n                        })\r\n                    }, 3000)\r\n                })\r\n        }\r\n    }\r\n\r\n    addName = (event) => {\r\n        event.preventDefault()\r\n        const nameObject = {\r\n            name: this.state.newName,\r\n            number: this.state.newNumber,\r\n        }   \r\n        if (this.findName(this.state.newName)) {\r\n            if (!window.confirm(`${nameObject.name} on jo luettelossa, korvataanko vanha numero uudella?`)) {\r\n                return\r\n            }\r\n            this.replaceNumber(nameObject)\r\n            return\r\n        }  \r\n\r\n        personServices\r\n            .create(nameObject)\r\n            .then(newPerson => {\r\n                this.setState({\r\n                    persons: this.state.persons.concat(newPerson),\r\n                    lastOperation: `${this.state.newName} lisättiin`,\r\n                    operationType: 'creation',\r\n                    newName: '',\r\n                    newNumber: ''\r\n                })\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        lastOperation: null,\r\n                        operationType: null\r\n                    })\r\n                  }, 3000)\r\n            })\r\n    }\r\n\r\n    replaceNumber = (Person) => {\r\n        const prson = this.state.persons.find(p => p.name.toLowerCase() === Person.name.toLowerCase());\r\n        Person.name = prson.name;\r\n        console.log(prson.id);\r\n        personServices\r\n            .update(prson.id, Person)\r\n            .then(response => {\r\n                const person = this.state.persons.filter(p => p.id !== prson.id)\r\n                console.log(response.id)\r\n                this.setState({\r\n                    persons: person.concat(response),\r\n                    lastOperation: `Henkilön ${prson.name} numero vaihdettiin`,\r\n                    operationType: 'creation',\r\n                    newName: '',\r\n                    newNumber: ''\r\n                })\r\n                setTimeout(() => {\r\n                    this.setState({\r\n                        lastOperation: null,\r\n                        operationType: null\r\n                    })\r\n                  }, 3000)\r\n            })\r\n        \r\n    }\r\n    render() {\r\n        const personsToShow = this.state.persons.filter(person => (person.name.toLowerCase()).includes(this.state.filter.toLowerCase()) || person.number.includes(this.state.filter)) \r\n        return (\r\n            <div>\r\n                <h2>Puhelinluettelo</h2>\r\n                <Notification message={this.state.lastOperation} type={this.state.operationType}/>\r\n                <Filter handleFilterChange={this.handleFilterChange} filter={this.filter}/>\r\n                <AddForm submit={this.addName} name={this.state.newName} handleName={this.handleNameChange} number={this.state.newNumber} handleNumber={this.handleNumberChange}/>\r\n                <h2>\r\n                    Numerot\r\n                </h2>\r\n                <div>\r\n                    {personsToShow.map(person => <Person key = {person.id} name={person.name} numero={person.number} removePerson={this.removePerson(person.id)}/>)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport App from './App'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}